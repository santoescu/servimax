/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { countDownTimerConfigModel, countDownTimerTexts } from './countdown-timer.model';
import { CountdownTimerService } from './countdown-timer.service';
var CountdownTimerComponent = /** @class */ (function () {
    function CountdownTimerComponent(countdownTimerService) {
        var _this = this;
        this.countdownTimerService = countdownTimerService;
        this.timerObj = {};
        //get timer value
        this.getTimerValue = (/**
         * @return {?}
         */
        function () {
            _this.timerSubscription = _this.countdownTimerService.getTimerValue().subscribe((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                _this.timerObj = Object.assign(res);
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                console.log(error);
                console.log('Failed to get timer value');
            }));
        });
    }
    /**
     * @return {?}
     */
    CountdownTimerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getTimerValue();
        this.timerConfig = new countDownTimerConfigModel();
        this.timerTextConfig = new countDownTimerTexts();
        this.timerConfig = this.countDownTimerConfig ? Object.assign(this.countDownTimerConfig) : null;
        this.timerTextConfig = this.countDownTimerConfig && this.countDownTimerConfig.timerTexts ? Object.assign(this.countDownTimerConfig.timerTexts) : null;
    };
    /**
     * @return {?}
     */
    CountdownTimerComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.timerSubscription.unsubscribe();
    };
    CountdownTimerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'countdown-timer',
                    template: "<div [class]=\"timerConfig?.timerClass ? timerConfig.timerClass : ''\">\r\n  <span>{{timerObj.hours}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.hourText ? timerTextConfig.hourText : 'hh'}} </span> \r\n  <span>{{timerObj.mins}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.minuteText ? timerTextConfig.minuteText : 'mm'}}  </span> \r\n  <span>{{timerObj.seconds}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.secondsText ? timerTextConfig.secondsText : 'ss'}}</span>\r\n</div>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    CountdownTimerComponent.ctorParameters = function () { return [
        { type: CountdownTimerService }
    ]; };
    CountdownTimerComponent.propDecorators = {
        startTime: [{ type: Input }],
        countDownTimerConfig: [{ type: Input }]
    };
    return CountdownTimerComponent;
}());
export { CountdownTimerComponent };
if (false) {
    /** @type {?} */
    CountdownTimerComponent.prototype.startTime;
    /** @type {?} */
    CountdownTimerComponent.prototype.countDownTimerConfig;
    /**
     * @type {?}
     * @private
     */
    CountdownTimerComponent.prototype.timerSubscription;
    /** @type {?} */
    CountdownTimerComponent.prototype.timerObj;
    /** @type {?} */
    CountdownTimerComponent.prototype.timerConfig;
    /** @type {?} */
    CountdownTimerComponent.prototype.timerTextConfig;
    /** @type {?} */
    CountdownTimerComponent.prototype.getTimerValue;
    /**
     * @type {?}
     * @private
     */
    CountdownTimerComponent.prototype.countdownTimerService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291bnRkb3duLXRpbWVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC10aW1lci8iLCJzb3VyY2VzIjpbImxpYi9jb3VudGRvd24tdGltZXIvY291bnRkb3duLXRpbWVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFHbEU7SUFnQkUsaUNBQW9CLHFCQUE0QztRQUFoRSxpQkFBb0U7UUFBaEQsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtRQUpoRSxhQUFRLEdBQVEsRUFBRSxDQUFDOztRQWVuQixrQkFBYTs7O1FBQUc7WUFDZCxLQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSSxDQUFDLHFCQUFxQixDQUFDLGFBQWEsRUFBRSxDQUFDLFNBQVM7Ozs7WUFBQyxVQUFBLEdBQUc7Z0JBQy9FLEtBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQyxDQUFDOzs7O1lBQUUsVUFBQSxLQUFLO2dCQUNOLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUMzQyxDQUFDLEVBQUMsQ0FBQztRQUNMLENBQUMsRUFBQTtJQWxCa0UsQ0FBQzs7OztJQUVwRSwwQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLHlCQUF5QixFQUFFLENBQUM7UUFDbkQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLG1CQUFtQixFQUFFLENBQUM7UUFDakQsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUMvRixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxvQkFBb0IsSUFBSSxJQUFJLENBQUMsb0JBQW9CLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUUsSUFBSSxDQUFDO0lBQ3pKLENBQUM7Ozs7SUFZRCw2Q0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkMsQ0FBQzs7Z0JBdENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQiw4akJBQStDOztpQkFFaEQ7Ozs7Z0JBUFEscUJBQXFCOzs7NEJBVTNCLEtBQUs7dUNBQ0wsS0FBSzs7SUFnQ1IsOEJBQUM7Q0FBQSxBQXhDRCxJQXdDQztTQW5DWSx1QkFBdUI7OztJQUVsQyw0Q0FBMkI7O0lBQzNCLHVEQUF5RDs7Ozs7SUFHekQsb0RBQXVDOztJQUN2QywyQ0FBbUI7O0lBQ25CLDhDQUF1Qzs7SUFDdkMsa0RBQXFDOztJQWFyQyxnREFPQzs7Ozs7SUFsQlcsd0RBQW9EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNvdW50RG93blRpbWVyQ29uZmlnTW9kZWwsIGNvdW50RG93blRpbWVyVGV4dHMgfSBmcm9tICcuL2NvdW50ZG93bi10aW1lci5tb2RlbCc7XHJcbmltcG9ydCB7IENvdW50ZG93blRpbWVyU2VydmljZSB9IGZyb20gJy4vY291bnRkb3duLXRpbWVyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnY291bnRkb3duLXRpbWVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vY291bnRkb3duLXRpbWVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9jb3VudGRvd24tdGltZXIuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ291bnRkb3duVGltZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASW5wdXQoKSBzdGFydFRpbWU6IFN0cmluZztcclxuICBASW5wdXQoKSBjb3VudERvd25UaW1lckNvbmZpZzogY291bnREb3duVGltZXJDb25maWdNb2RlbDtcclxuXHJcbiAgLy9Jbml0XHJcbiAgcHJpdmF0ZSB0aW1lclN1YnNjcmlwdGlvbjpTdWJzY3JpcHRpb247XHJcbiAgdGltZXJPYmo6IGFueSA9IHt9O1xyXG4gIHRpbWVyQ29uZmlnOiBjb3VudERvd25UaW1lckNvbmZpZ01vZGVsO1xyXG4gIHRpbWVyVGV4dENvbmZpZzogY291bnREb3duVGltZXJUZXh0cztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb3VudGRvd25UaW1lclNlcnZpY2U6IENvdW50ZG93blRpbWVyU2VydmljZSkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmdldFRpbWVyVmFsdWUoKTtcclxuICAgIHRoaXMudGltZXJDb25maWcgPSBuZXcgY291bnREb3duVGltZXJDb25maWdNb2RlbCgpO1xyXG4gICAgdGhpcy50aW1lclRleHRDb25maWcgPSBuZXcgY291bnREb3duVGltZXJUZXh0cygpO1xyXG4gICAgdGhpcy50aW1lckNvbmZpZyA9IHRoaXMuY291bnREb3duVGltZXJDb25maWcgPyBPYmplY3QuYXNzaWduKHRoaXMuY291bnREb3duVGltZXJDb25maWcpIDogbnVsbDtcclxuICAgIHRoaXMudGltZXJUZXh0Q29uZmlnID0gdGhpcy5jb3VudERvd25UaW1lckNvbmZpZyAmJiB0aGlzLmNvdW50RG93blRpbWVyQ29uZmlnLnRpbWVyVGV4dHMgPyBPYmplY3QuYXNzaWduKHRoaXMuY291bnREb3duVGltZXJDb25maWcudGltZXJUZXh0cykgOiAgbnVsbDtcclxuICB9XHJcblxyXG4gIC8vZ2V0IHRpbWVyIHZhbHVlXHJcbiAgZ2V0VGltZXJWYWx1ZSA9ICgpID0+IHtcclxuICAgIHRoaXMudGltZXJTdWJzY3JpcHRpb24gPSB0aGlzLmNvdW50ZG93blRpbWVyU2VydmljZS5nZXRUaW1lclZhbHVlKCkuc3Vic2NyaWJlKHJlcyA9PiB7XHJcbiAgICAgIHRoaXMudGltZXJPYmogPSBPYmplY3QuYXNzaWduKHJlcyk7XHJcbiAgICB9LCBlcnJvciA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgY29uc29sZS5sb2coJ0ZhaWxlZCB0byBnZXQgdGltZXIgdmFsdWUnKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLnRpbWVyU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=