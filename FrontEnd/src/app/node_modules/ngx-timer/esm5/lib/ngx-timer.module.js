/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CountupTimerComponent } from './countup-timer/countup-timer.component';
import { CommonModule } from '@angular/common';
import { CountdownTimerComponent } from './countdown-timer/countdown-timer.component';
import { CountupTimerService } from './countup-timer/countup-timer.service';
import { CountdownTimerService } from './countdown-timer/countdown-timer.service';
import { StopWatchComponent } from './stop-watch/stop-watch.component';
import { StopWatchService } from './stop-watch/stop-watch.service';
var NgxTimerModule = /** @class */ (function () {
    function NgxTimerModule() {
    }
    NgxTimerModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        CountupTimerComponent,
                        CountdownTimerComponent,
                        StopWatchComponent
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        CountupTimerComponent,
                        CountdownTimerComponent,
                        StopWatchComponent
                    ],
                    entryComponents: [
                        CountupTimerComponent,
                        CountdownTimerComponent,
                        StopWatchComponent
                    ],
                    providers: [
                        CountupTimerService,
                        CountdownTimerService,
                        StopWatchService
                    ]
                },] }
    ];
    return NgxTimerModule;
}());
export { NgxTimerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRpbWVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC10aW1lci8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtdGltZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBRWhGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUN0RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM1RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNsRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUVuRTtJQUFBO0lBeUI4QixDQUFDOztnQkF6QjlCLFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1oscUJBQXFCO3dCQUNyQix1QkFBdUI7d0JBQ3ZCLGtCQUFrQjtxQkFDbkI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLHFCQUFxQjt3QkFDckIsdUJBQXVCO3dCQUN2QixrQkFBa0I7cUJBQ25CO29CQUNELGVBQWUsRUFBQzt3QkFDZCxxQkFBcUI7d0JBQ3JCLHVCQUF1Qjt3QkFDdkIsa0JBQWtCO3FCQUNuQjtvQkFDRCxTQUFTLEVBQUM7d0JBQ1IsbUJBQW1CO3dCQUNuQixxQkFBcUI7d0JBQ3JCLGdCQUFnQjtxQkFDakI7aUJBQ0Y7O0lBQzZCLHFCQUFDO0NBQUEsQUF6Qi9CLElBeUIrQjtTQUFsQixjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ291bnR1cFRpbWVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb3VudHVwLXRpbWVyL2NvdW50dXAtdGltZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQnJvd3Nlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBDb3VudGRvd25UaW1lckNvbXBvbmVudCB9IGZyb20gJy4vY291bnRkb3duLXRpbWVyL2NvdW50ZG93bi10aW1lci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDb3VudHVwVGltZXJTZXJ2aWNlIH0gZnJvbSAnLi9jb3VudHVwLXRpbWVyL2NvdW50dXAtdGltZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IENvdW50ZG93blRpbWVyU2VydmljZSB9IGZyb20gJy4vY291bnRkb3duLXRpbWVyL2NvdW50ZG93bi10aW1lci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgU3RvcFdhdGNoQ29tcG9uZW50IH0gZnJvbSAnLi9zdG9wLXdhdGNoL3N0b3Atd2F0Y2guY29tcG9uZW50JztcclxuaW1wb3J0IHsgU3RvcFdhdGNoU2VydmljZSB9IGZyb20gJy4vc3RvcC13YXRjaC9zdG9wLXdhdGNoLnNlcnZpY2UnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIENvdW50dXBUaW1lckNvbXBvbmVudCwgXHJcbiAgICBDb3VudGRvd25UaW1lckNvbXBvbmVudCwgXHJcbiAgICBTdG9wV2F0Y2hDb21wb25lbnRcclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgQ291bnR1cFRpbWVyQ29tcG9uZW50LFxyXG4gICAgQ291bnRkb3duVGltZXJDb21wb25lbnQsXHJcbiAgICBTdG9wV2F0Y2hDb21wb25lbnRcclxuICBdLFxyXG4gIGVudHJ5Q29tcG9uZW50czpbXHJcbiAgICBDb3VudHVwVGltZXJDb21wb25lbnQsXHJcbiAgICBDb3VudGRvd25UaW1lckNvbXBvbmVudCxcclxuICAgIFN0b3BXYXRjaENvbXBvbmVudFxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOltcclxuICAgIENvdW50dXBUaW1lclNlcnZpY2UsXHJcbiAgICBDb3VudGRvd25UaW1lclNlcnZpY2UsXHJcbiAgICBTdG9wV2F0Y2hTZXJ2aWNlXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4VGltZXJNb2R1bGUgeyB9XHJcbiJdfQ==