/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { StopWatchService } from './stop-watch.service';
export class StopWatchComponent {
    // timerConfig: countDownTimerConfigModel;
    // timerTextConfig: countDownTimerTexts;
    /**
     * @param {?} countdownTimerService
     */
    constructor(countdownTimerService) {
        this.countdownTimerService = countdownTimerService;
        this.timerObj = {};
        //get timer value
        this.getTimerValue = (/**
         * @return {?}
         */
        () => {
            this.timerSubscription = this.countdownTimerService.getTimerValue().subscribe((/**
             * @param {?} res
             * @return {?}
             */
            res => {
                this.timerObj = Object.assign(res);
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => {
                console.log(error);
                console.log('Failed to get timer value');
            }));
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getTimerValue();
        // this.timerConfig = new countDownTimerConfigModel();
        // this.timerTextConfig = new countDownTimerTexts();
        // this.timerConfig = this.countDownTimerConfig ? Object.assign(this.countDownTimerConfig) : null;
        // this.timerTextConfig = this.countDownTimerConfig && this.countDownTimerConfig.timerTexts ? Object.assign(this.countDownTimerConfig.timerTexts) :  null;
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.timerSubscription.unsubscribe();
    }
}
StopWatchComponent.decorators = [
    { type: Component, args: [{
                selector: 'stop-watch',
                template: "<!-- <div [class]=\"timerConfig?.timerClass ? timerConfig.timerClass : ''\">\n  <span>{{timerObj.hours}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.hourText ? timerTextConfig.hourText : 'hh'}} </span> \n  <span>{{timerObj.mins}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.minuteText ? timerTextConfig.minuteText : 'mm'}}  </span> \n  <span>{{timerObj.seconds}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.secondsText ? timerTextConfig.secondsText : 'ss'}}</span>\n  <span>{{timerObj.miliseconds}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.milisecondsText ? timerTextConfig.milisecondsText : 'ss'}}</span>\n</div> -->",
                styles: [""]
            }] }
];
/** @nocollapse */
StopWatchComponent.ctorParameters = () => [
    { type: StopWatchService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    StopWatchComponent.prototype.timerSubscription;
    /** @type {?} */
    StopWatchComponent.prototype.timerObj;
    /** @type {?} */
    StopWatchComponent.prototype.getTimerValue;
    /**
     * @type {?}
     * @private
     */
    StopWatchComponent.prototype.countdownTimerService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcC13YXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtdGltZXIvIiwic291cmNlcyI6WyJsaWIvc3RvcC13YXRjaC9zdG9wLXdhdGNoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQVF4RCxNQUFNLE9BQU8sa0JBQWtCOzs7Ozs7SUFRN0IsWUFBb0IscUJBQXVDO1FBQXZDLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBa0I7UUFKM0QsYUFBUSxHQUFRLEVBQUUsQ0FBQzs7UUFlbkIsa0JBQWE7OztRQUFHLEdBQUcsRUFBRTtZQUNuQixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGFBQWEsRUFBRSxDQUFDLFNBQVM7Ozs7WUFBQyxHQUFHLENBQUMsRUFBRTtnQkFDbEYsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JDLENBQUM7Ozs7WUFBRSxLQUFLLENBQUMsRUFBRTtnQkFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLENBQUM7WUFDM0MsQ0FBQyxFQUFDLENBQUM7UUFDTCxDQUFDLEVBQUE7SUFsQjZELENBQUM7Ozs7SUFFL0QsUUFBUTtRQUNOLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixzREFBc0Q7UUFDdEQsb0RBQW9EO1FBQ3BELGtHQUFrRztRQUNsRywwSkFBMEo7SUFDNUosQ0FBQzs7OztJQVlELFdBQVc7UUFDVCxJQUFJLENBQUMsaUJBQWlCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkMsQ0FBQzs7O1lBbkNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsNHVCQUEwQzs7YUFFM0M7Ozs7WUFQUSxnQkFBZ0I7Ozs7Ozs7SUFXdkIsK0NBQXVDOztJQUN2QyxzQ0FBbUI7O0lBZW5CLDJDQU9DOzs7OztJQWxCVyxtREFBK0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3RvcFdhdGNoU2VydmljZSB9IGZyb20gJy4vc3RvcC13YXRjaC5zZXJ2aWNlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzdG9wLXdhdGNoJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3N0b3Atd2F0Y2guY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9zdG9wLXdhdGNoLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgU3RvcFdhdGNoQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvL0luaXRcbiAgcHJpdmF0ZSB0aW1lclN1YnNjcmlwdGlvbjpTdWJzY3JpcHRpb247XG4gIHRpbWVyT2JqOiBhbnkgPSB7fTtcbiAgLy8gdGltZXJDb25maWc6IGNvdW50RG93blRpbWVyQ29uZmlnTW9kZWw7XG4gIC8vIHRpbWVyVGV4dENvbmZpZzogY291bnREb3duVGltZXJUZXh0cztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvdW50ZG93blRpbWVyU2VydmljZTogU3RvcFdhdGNoU2VydmljZSkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmdldFRpbWVyVmFsdWUoKTtcbiAgICAvLyB0aGlzLnRpbWVyQ29uZmlnID0gbmV3IGNvdW50RG93blRpbWVyQ29uZmlnTW9kZWwoKTtcbiAgICAvLyB0aGlzLnRpbWVyVGV4dENvbmZpZyA9IG5ldyBjb3VudERvd25UaW1lclRleHRzKCk7XG4gICAgLy8gdGhpcy50aW1lckNvbmZpZyA9IHRoaXMuY291bnREb3duVGltZXJDb25maWcgPyBPYmplY3QuYXNzaWduKHRoaXMuY291bnREb3duVGltZXJDb25maWcpIDogbnVsbDtcbiAgICAvLyB0aGlzLnRpbWVyVGV4dENvbmZpZyA9IHRoaXMuY291bnREb3duVGltZXJDb25maWcgJiYgdGhpcy5jb3VudERvd25UaW1lckNvbmZpZy50aW1lclRleHRzID8gT2JqZWN0LmFzc2lnbih0aGlzLmNvdW50RG93blRpbWVyQ29uZmlnLnRpbWVyVGV4dHMpIDogIG51bGw7XG4gIH1cblxuICAvL2dldCB0aW1lciB2YWx1ZVxuICBnZXRUaW1lclZhbHVlID0gKCkgPT4ge1xuICAgIHRoaXMudGltZXJTdWJzY3JpcHRpb24gPSB0aGlzLmNvdW50ZG93blRpbWVyU2VydmljZS5nZXRUaW1lclZhbHVlKCkuc3Vic2NyaWJlKHJlcyA9PiB7XG4gICAgICB0aGlzLnRpbWVyT2JqID0gT2JqZWN0LmFzc2lnbihyZXMpO1xuICAgIH0sIGVycm9yID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgIGNvbnNvbGUubG9nKCdGYWlsZWQgdG8gZ2V0IHRpbWVyIHZhbHVlJyk7XG4gICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnRpbWVyU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxufVxuIl19