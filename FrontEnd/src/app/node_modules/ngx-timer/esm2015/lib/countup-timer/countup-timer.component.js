/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { CountupTimerService } from './countup-timer.service';
import { countUpTimerConfigModel, timerTexts } from './countup-timer.model';
export class CountupTimerComponent {
    /**
     * @param {?} countupTimerService
     */
    constructor(countupTimerService) {
        this.countupTimerService = countupTimerService;
        //Init
        this.timerObj = {};
        //get timer value
        this.getTimerValue = (/**
         * @return {?}
         */
        () => {
            this.timerSubscription = this.countupTimerService.getTimerValue().subscribe((/**
             * @param {?} res
             * @return {?}
             */
            res => {
                this.timerObj = Object.assign(res);
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => {
                console.log(error);
                console.log('Failed to get timer value');
            }));
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getTimerValue();
        this.timerConfig = new countUpTimerConfigModel();
        this.timerTextConfig = new timerTexts();
        this.timerConfig = this.countUpTimerConfig ? Object.assign(this.countUpTimerConfig) : null;
        this.timerTextConfig = this.countUpTimerConfig && this.countUpTimerConfig.timerTexts ? Object.assign(this.countUpTimerConfig.timerTexts) : null;
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.timerSubscription.unsubscribe();
    }
}
CountupTimerComponent.decorators = [
    { type: Component, args: [{
                selector: 'countup-timer',
                template: "<div [class]=\"timerConfig?.timerClass ? timerConfig.timerClass : ''\">\n  <span>{{timerObj.hours}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.hourText ? timerTextConfig.hourText : 'hh'}} </span> \n  <span>{{timerObj.mins}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.minuteText ? timerTextConfig.minuteText : 'mm'}}  </span> \n  <span>{{timerObj.seconds}}</span><span class=\"time-category\">{{timerTextConfig && timerTextConfig.secondsText ? timerTextConfig.secondsText : 'ss'}}</span>\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
CountupTimerComponent.ctorParameters = () => [
    { type: CountupTimerService }
];
CountupTimerComponent.propDecorators = {
    startTime: [{ type: Input }],
    countUpTimerConfig: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    CountupTimerComponent.prototype.startTime;
    /** @type {?} */
    CountupTimerComponent.prototype.countUpTimerConfig;
    /** @type {?} */
    CountupTimerComponent.prototype.timerObj;
    /**
     * @type {?}
     * @private
     */
    CountupTimerComponent.prototype.timerSubscription;
    /** @type {?} */
    CountupTimerComponent.prototype.timerConfig;
    /** @type {?} */
    CountupTimerComponent.prototype.timerTextConfig;
    /** @type {?} */
    CountupTimerComponent.prototype.getTimerValue;
    /**
     * @type {?}
     * @private
     */
    CountupTimerComponent.prototype.countupTimerService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291bnR1cC10aW1lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtdGltZXIvIiwic291cmNlcyI6WyJsaWIvY291bnR1cC10aW1lci9jb3VudHVwLXRpbWVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxVQUFVLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQU81RSxNQUFNLE9BQU8scUJBQXFCOzs7O0lBV2hDLFlBQW9CLG1CQUF3QztRQUF4Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCOztRQUw1RCxhQUFRLEdBQVEsRUFBRSxDQUFDOztRQWdCbkIsa0JBQWE7OztRQUFHLEdBQUcsRUFBRTtZQUNuQixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGFBQWEsRUFBRSxDQUFDLFNBQVM7Ozs7WUFBQyxHQUFHLENBQUMsRUFBRTtnQkFDaEYsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JDLENBQUM7Ozs7WUFBRSxLQUFLLENBQUMsRUFBRTtnQkFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLENBQUM7WUFDM0MsQ0FBQyxFQUFDLENBQUM7UUFDTCxDQUFDLEVBQUE7SUFsQjhELENBQUM7Ozs7SUFFaEUsUUFBUTtRQUNOLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksdUJBQXVCLEVBQUUsQ0FBQztRQUNqRCxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUMzRixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsSUFBSSxJQUFJLENBQUMsa0JBQWtCLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUUsSUFBSSxDQUFDO0lBQ25KLENBQUM7Ozs7SUFZRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7OztZQXRDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLHNqQkFBNkM7O2FBRTlDOzs7O1lBUFEsbUJBQW1COzs7d0JBVXpCLEtBQUs7aUNBQ0wsS0FBSzs7OztJQUROLDBDQUEyQjs7SUFDM0IsbURBQXFEOztJQUdyRCx5Q0FBbUI7Ozs7O0lBQ25CLGtEQUEwQjs7SUFDMUIsNENBQXFDOztJQUNyQyxnREFBNEI7O0lBYTVCLDhDQU9DOzs7OztJQWxCVyxvREFBZ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ291bnR1cFRpbWVyU2VydmljZSB9IGZyb20gJy4vY291bnR1cC10aW1lci5zZXJ2aWNlJztcbmltcG9ydCB7IGNvdW50VXBUaW1lckNvbmZpZ01vZGVsLCB0aW1lclRleHRzIH0gZnJvbSAnLi9jb3VudHVwLXRpbWVyLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY291bnR1cC10aW1lcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb3VudHVwLXRpbWVyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY291bnR1cC10aW1lci5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIENvdW50dXBUaW1lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICBASW5wdXQoKSBzdGFydFRpbWU6IFN0cmluZztcbiAgQElucHV0KCkgY291bnRVcFRpbWVyQ29uZmlnOiBjb3VudFVwVGltZXJDb25maWdNb2RlbDtcblxuICAvL0luaXRcbiAgdGltZXJPYmo6IGFueSA9IHt9O1xuICBwcml2YXRlIHRpbWVyU3Vic2NyaXB0aW9uO1xuICB0aW1lckNvbmZpZzogY291bnRVcFRpbWVyQ29uZmlnTW9kZWw7XG4gIHRpbWVyVGV4dENvbmZpZzogdGltZXJUZXh0cztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvdW50dXBUaW1lclNlcnZpY2U6IENvdW50dXBUaW1lclNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5nZXRUaW1lclZhbHVlKCk7XG4gICAgdGhpcy50aW1lckNvbmZpZyA9IG5ldyBjb3VudFVwVGltZXJDb25maWdNb2RlbCgpO1xuICAgIHRoaXMudGltZXJUZXh0Q29uZmlnID0gbmV3IHRpbWVyVGV4dHMoKTtcbiAgICB0aGlzLnRpbWVyQ29uZmlnID0gdGhpcy5jb3VudFVwVGltZXJDb25maWcgPyBPYmplY3QuYXNzaWduKHRoaXMuY291bnRVcFRpbWVyQ29uZmlnKSA6IG51bGw7XG4gICAgdGhpcy50aW1lclRleHRDb25maWcgPSB0aGlzLmNvdW50VXBUaW1lckNvbmZpZyAmJiB0aGlzLmNvdW50VXBUaW1lckNvbmZpZy50aW1lclRleHRzID8gT2JqZWN0LmFzc2lnbih0aGlzLmNvdW50VXBUaW1lckNvbmZpZy50aW1lclRleHRzKSA6ICBudWxsO1xuICB9XG5cbiAgLy9nZXQgdGltZXIgdmFsdWVcbiAgZ2V0VGltZXJWYWx1ZSA9ICgpID0+IHtcbiAgICB0aGlzLnRpbWVyU3Vic2NyaXB0aW9uID0gdGhpcy5jb3VudHVwVGltZXJTZXJ2aWNlLmdldFRpbWVyVmFsdWUoKS5zdWJzY3JpYmUocmVzID0+IHtcbiAgICAgIHRoaXMudGltZXJPYmogPSBPYmplY3QuYXNzaWduKHJlcyk7XG4gICAgfSwgZXJyb3IgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgY29uc29sZS5sb2coJ0ZhaWxlZCB0byBnZXQgdGltZXIgdmFsdWUnKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMudGltZXJTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG59XG4iXX0=