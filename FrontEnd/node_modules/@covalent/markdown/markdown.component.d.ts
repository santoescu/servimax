import { AfterViewInit, ElementRef, EventEmitter, Renderer2, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
export declare class TdMarkdownComponent implements OnChanges, AfterViewInit, OnDestroy {
    private _renderer;
    private _elementRef;
    private _domSanitizer;
    private _content;
    private _simpleLineBreaks;
    private _hostedUrl;
    private _anchor;
    private handleAnchorClicksBound;
    private _viewInit;
    /**
     * .td-markdown class added to host so ::ng-deep gets scoped.
     */
    class: string;
    /**
     * content?: string
     *
     * Markdown format content to be parsed as html markup.
     *
     * e.g. README.md content.
     */
    content: string;
    /**
     * simpleLineBreaks?: string
     *
     * Sets whether newline characters inside paragraphs and spans are parsed as <br/>.
     * Defaults to false.
     */
    simpleLineBreaks: boolean;
    /**
     * hostedUrl?: string
     *
     * If markdown contains relative paths, this is required to generate correct urls.
     *
     */
    hostedUrl: string;
    /**
     * anchor?: string
     *
     * Anchor to jump to.
     *
     */
    anchor: string;
    /**
     * contentReady?: function
     * Event emitted after the markdown content rendering is finished.
     */
    onContentReady: EventEmitter<undefined>;
    constructor(_renderer: Renderer2, _elementRef: ElementRef, _domSanitizer: DomSanitizer);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    refresh(): void;
    /**
     * General method to parse a string markdown into HTML Elements and load them into the container
     */
    private _loadContent;
    private handleAnchorClicks;
    private attachAnchorListeners;
    private removeAnchorListeners;
    private _elementFromString;
    private _render;
}
